#!/usr/bin/perl -w

use strict;
use JSON::PP;
use Archive::Tar;
use File::Find;
use Digest::SHA;
use Cwd 'abs_path';

my $info = read_JSON_file("control.json");
my $name = ${$info}{"Package"};
my $version = ${$info}{"Version"};

my $filename = "${name}_${version}.tar.gz";

my @files = ("control.json");
find({wanted => \&findstuff, no_chdir=> 1}, "files");

Archive::Tar->create_archive($filename,COMPRESS_GZIP, @files);

${$info}{"SHA1"} = sha1sum($filename);
my $json = JSON::PP->new;
$json->indent();
my $json_text = $json->utf8->encode($info,1);
print "$json_text";


sub sha1sum
{
    my $filename = shift;
    my $fh;
    unless (open $fh,$filename) {
	print STDERR "$0: open $filename: $!";
	exit(1);
    }

    my $sha1 = Digest::SHA->new(1);
    $sha1->addfile($fh);
    my $digest = $sha1->hexdigest;
    close $fh;
    return $digest;
}
    
sub findstuff
{
    my $file = $File::Find::name;
    my $d = Cwd::cwd();
    my $dir = $File::Find::dir;
    return unless -f "$file";
    return if (-d "$file");
    return if ($file =~ /.*flymake.*/);
    return if ($file =~ /\~$/);
    push @files,$file;
}

sub read_JSON_file
{
    my $filename = shift;

    my $json;
    {
	local $/; # Enable 'slurp' mode
	open my $fh, "<", $filename or error_exit("Can't open \"$filename\": $!");
	$json = <$fh>;
	close $fh;
    };
    
    return decode_json($json);
}

    
